name: Build
on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      fw_ver: ${{ steps.set-fw-version.outputs.FW_VER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set FW version
        id: set-fw-version
        run: |
          echo "FW_VER=0.0.5" >> "$GITHUB_OUTPUT"

      - name: Release folder
        run: |
          mkdir nordic_${{ steps.set-fw-version.outputs.FW_VER }}
          cp -r sample_art nordic_${{ steps.set-fw-version.outputs.FW_VER }}
          ls -la
          zip -r merged.zip nordic_${{ steps.set-fw-version.outputs.FW_VER }}


      - name: Upload Firmware release artifact
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: merged.zip
          if-no-files-found: error

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: build
    steps:
      # - env:
      #     OUTPUT_FW_VER: ${{needs.build.outputs.fw_ver}}
      #   run: echo "$OUTPUT_FW_VER"
      - name: Download all build artifacts
        uses: actions/download-artifact@v3

      - name: Print fw ver
        run: |
          echo "${{needs.build.outputs.fw_ver}}"
          # ls -la
          # cd nordic_${{needs.build.outputs.fw_ver}}/
          # ls -la

      - name: Release
        uses: softprops/action-gh-release@v1

        with:
          files: |
            firmware/*.zip



# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       output1: ${{ steps.step1.outputs.test }}
#       output2: ${{ steps.step2.outputs.test }}
#     steps:
#       - id: step1
#         run: echo "test=hello" >> "$GITHUB_OUTPUT"
#       - id: step2
#         run: echo "test=world" >> "$GITHUB_OUTPUT"
#   job2:
#     runs-on: ubuntu-latest
#     needs: job1
#     steps:
#       - env:
#           OUTPUT1: ${{needs.job1.outputs.output1}}
#           OUTPUT2: ${{needs.job1.outputs.output2}}
#         run: echo "$OUTPUT1 $OUTPUT2"